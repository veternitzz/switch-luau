[{"title":"Switch","type":0,"sectionRef":"#","url":"/switch-luau/api/Switch","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#types","content":" "},{"title":"StatementOperator​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#StatementOperator","content":"&lt;/&gt; type StatementOperator = &quot;~=&quot; | &quot;==&quot; | &quot;&gt;&quot; | &quot;&lt;&quot; | &quot;&gt;=&quot; | &quot;&lt;=&quot; Statement Operators like equals to, not equals to, greater than, etc. "},{"title":"Functions​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#new","content":"Constructor &lt;/&gt; Switch.new( variable: any-- The variable for the switch to check ) → nil Returns a switch class.  "},{"title":"Debug​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#Debug","content":"&lt;/&gt; Switch:Debug( enabled: bool-- Whether to enaable or disable debug mode ) → nil If enabled, will print when switches and defaults are registered.  "},{"title":"Case​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#Case","content":"&lt;/&gt; Switch:Case( value: any,-- The value to check with the variable operation: StatementOperator,-- The operator to use on value and variable func: any-- The function to call if it's a match ) → () Define a new case, this acts like an if statement  "},{"title":"Default​","type":1,"pageTitle":"Switch","url":"/switch-luau/api/Switch#Default","content":"Only one can be reigstered per constructor &lt;/&gt; Switch:Default( func: any-- The function to call ) → () Define a default which acts as an else statement "},{"title":"Internal","type":0,"sectionRef":"#","url":"/switch-luau/api/Internal","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Internal","url":"/switch-luau/api/Internal#functions","content":" "},{"title":"StatementCheck​","type":1,"pageTitle":"Internal","url":"/switch-luau/api/Internal#StatementCheck","content":"&lt;/&gt; Internal.StatementCheck( operation: StatementOperator,-- The operation to perform on value and variable variable: any,-- The variable to check value: any-- The value to check ) → bool-- Returns whether the value meets the variable based on the operation Checks the provided value and see if it meets the variable provided. "}]